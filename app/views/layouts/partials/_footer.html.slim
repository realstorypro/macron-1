= segment "footer fragment vertical #{footer_class}"
  = container 'center aligned'
    = grid "stackable left aligned #{footer_item_order}"
      = column size: 6
        = h5 text: 'About Us', class: footer_item_class
        = ss(:about).html_safe
      - unless footer_reversed?
        = column size:1, only: :computer
      = column size: 4 do
        = h5 text: 'Contact Us', class: footer_item_class
        = list "relaxed divided link #{footer_item_class}"
          - if ss(:phone) && !ss(:phone).blank?
            = item
              = icon 'phone'
              = content text: ss(:phone)
          - if ss(:website) && !ss(:website).blank?
            = item
              = icon 'globe'
              = content
                = link_to ss(:website).gsub('https://','').gsub('http://',''), ss(:website), class: 'email link'
          - if ss(:email) && !ss(:email).blank?
            = item
              = icon 'mail'
              = content
                = link_to ss(:email), "mailto:#{ss(:email)}", class: 'email link'
          - if ss(:address1) && !ss(:address1).blank?
            = item
              = icon 'map'
              = content
                = ss(:address1)
                - if ss(:address2) && !ss(:address2).blank?
                  br
                  = ss(:address2)
                - if ss(:address3) && !ss(:address3).blank?
                  br
                  = ss(:address3)
      - if footer_reversed?
        = column size:1, only: :computer
      = column size: 5
        == Widget::NewsletterCell.(nil, current_user: current_user, button_color: ss(:footer_button_color) ,layout: :footer, site_settings: @site_settings)

      = column size: 16, class: 'center aligned'
        = divider class: footer_item_class
        = image_tag ss(:icon), class: "ui image mini centered" if ss(:footer_icon) == 'show'
        = list "copyright horizontal mini divided link #{footer_item_class}"
          = item
            = "&copy; #{ss(:copyrights)}".html_safe
          ==  MenuCell.(nil,
                  menu: s('menu.legal'),
                  policy: Pundit.policy(current_user, :headless),
                  request: request)
          = item
            = link_to t('app.powered_by_text'), t('app.powered_by_url')
