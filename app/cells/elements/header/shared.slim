= fragment "header #{header_size} #{model.color if model.respond_to?(:color)}"

  - if model.respond_to?(:landscape_image) && model.respond_to?(:vertical_image)
    == Vue::CoverCell.(nil, overlay_background: ss("theme.global.overlay_background"), landscape_image: model.landscape_image, vertical_image: model.vertical_image)
  - elsif model.respond_to?(:landscape_image)
    == Vue::CoverCell.(nil, overlay_background: ss("theme.global.overlay_background"), image: model.landscape_image)

  = container
    = grid 'centered'
      = column computer: 14, tablet: 16, mobile: 16

        // heading and summary
        - if has_title
          = h1 class: "#{title_alignment} aligned #{title_extra_classes}", text: title

        - if has_summary
          .summary class="#{summary_alignment} #{summary_extra_classes}"
            = simple_format(model.summary)

        - if has_credit
          .credit
            = h5 class: 'horizontal divider', text: model.credit

        // the embed logic
        - if has_embed
          - if model.url
            - if model.embedded == false || model.embedded.blank?
              = h6 text: 'Embed Is Not Available (For The URL Inserted)', class: 'horizontal divider'
            - else
              = model.embedded.html_safe
          - else
            = h6 text: 'Embed (No URL Inserted)', class: 'horizontal divider'

        // video logic
        - if has_video
          - if amped
            .not.available.video
              h5
                | Video Unavailable
                br
                |on Lite Version
              = "#{link_to('Switch to Full Version', options[:request].original_url, class: 'full version switch')}"

          - else
            == Vue::VideoCell.(nil, video: video, video_cover: video_cover)
            = render 'video_microdata'
